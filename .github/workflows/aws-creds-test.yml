# Referenced in the GIA Platform Documentation
# Configure AWS Credentials: https://github.com/aws-actions/configure-aws-credentials#usage

# Work on GitHub?
# yes

# Work with ACT?
# No

# Comments
# ---------
# OIDC requires a trust relationship between GH and AWS, which isn't present when running locally.
# I suspect that ACT would work if creds were stored as GH secrets.
# I'll see as I test other actions.

name: List AWS Buckets
run-name: ${{ github.actor }} is printing bucket names
on: push

jobs:
  list-buckets:
    name: List AWS S3
    runs-on: ubuntu-latest
    env:
    #   AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #   AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-1
      # AWS_PROFILE: ${{ env.AWS_PROFILE }}

    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read

    steps:
    # - name: Install AWS CLI - Local
    #   if: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #   run: |
    #     curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
    #     unzip awscliv2.zip
    #     ./aws/install > /dev/null

    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials - GitHub
      # if: ${{ secrets.AWS_SESSION_TOKEN }} == null
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        role-to-assume: arn:aws:iam::223356124846:role/bks_brian-sigurdson_gh-practice
        aws-region: ${{ env.AWS_DEFAULT_REGION }}

    # - name: Configure AWS credentials - Local
    #   if: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #   uses: aws-actions/configure-aws-credentials@v1-node16
    #   with:
    #     # role-to-assume: arn:aws:iam::223356124846:role/bks_brian-sigurdson_gh-practice
    #     aws-region: ${{ env.AWS_DEFAULT_REGION }}
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
    #     # aws-profile: ${{ env.AWS_PROFILE }}

    # - name: Run stuff
    #   run: |
    #     # aws --version     
    #     # pwd
    #     echo $AWS_DEFAULT_REGION
    #     aws configure list
    #     aws sts get-caller-identity


    - name: List bucket names
      run: |
    #     export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
    #     export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    #     export AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
    #     echo AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
    #     echo AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    #     echo AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}

        aws s3 ls
        aws configure list
        aws sts get-caller-identity
    


